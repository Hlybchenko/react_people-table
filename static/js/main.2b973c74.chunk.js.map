{"version":3,"sources":["api/getData.js","components/setClassName.js","components/Person.js","components/PeopleTable.js","components/NewPerson.js","components/App.js","index.js"],"names":["getData","fetch","proxyUrl","then","response","json","addClassForName","person","className","born","died","addClassForPerson","concat","century","sex","age","children","length","Person","_ref","react_default","a","createElement","tabIndex","id","name","father","mother","PeopleTable","people","Fragment","map","onePerson","components_Person","key","NewPerson","_this","forID","props","Object","objectWithoutProperties","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","objectSpread","handleSubmit","event","preventDefault","handleFormSubmit","state","newPerson","setState","show","handleChange","_event$target","target","value","_objectSpread2","defineProperty","Number","Math","ceil","console","log","handleShow","handleClose","Button","variant","onClick","onSubmit","Modal","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","placeholder","onChange","htmlFor","type","Row","as","Col","Footer","React","Component","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Data","sent","abrupt","index","filter","child","join","stop","apply","arguments","getSortBy","field","b","localeCompare","App","visiblePeople","isLoaded","sortField","loadData","_callee2","_context2","toConsumableArray","onSortPeopleBy","prevState","sort","reverse","onSearchByName","searchField","toLowerCase","includes","_this$state","toUpperCase","components_NewPerson","components_PeopleTable","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2b973c74.chunk.js","sourcesContent":["const getData = () => {\n  const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n  const targetUrl = (\n    'https://mate-academy.github.io/react_people-table/api/people.json'\n  );\n\n  return fetch(proxyUrl + targetUrl)\n    .then(response => response.json());\n};\n\nexport default getData;\n","export const addClassForName = (person) => {\n  let className = '';\n\n  if (person.born < 1650) {\n    className += 'born-before-1650';\n  }\n\n  if (person.died > 1800) {\n    className += 'died-after-1800 font-weight-bolder';\n  }\n\n  return className;\n};\n\nexport const addClassForPerson = (person) => {\n  let className = `person person--lived-in-${person.century}`;\n\n  if (person.sex === 'm') {\n    className += ' person--male';\n  }\n\n  if (person.sex === 'f') {\n    className += ' person--female';\n  }\n\n  if (person.age > 65) {\n    className += ' over-65';\n  }\n\n  if (person.sex === 'f' && person.children.length > 0) {\n    className += ' person--mother';\n  }\n\n  if (person.sex === 'm' && person.children.length > 0) {\n    className += ' person--father';\n  }\n\n  return className;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addClassForPerson, addClassForName } from './setClassName';\n\nconst Person = ({ person }) => (\n  <tr className={addClassForPerson(person)} tabIndex=\"0\">\n    <td>{person.id}</td>\n    <td className={addClassForName(person)}>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.age}</td>\n    <td>{person.century}</td>\n    <td>{person.father}</td>\n    <td>{person.mother}</td>\n    <td>{person.children}</td>\n  </tr>\n);\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    age: PropTypes.number,\n    century: PropTypes.number,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    children: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Person from './Person';\n\nconst PeopleTable = ({ people }) => (\n  <>\n    {people.map(onePerson => (\n      <Person person={onePerson} key={onePerson.id} />\n    ))}\n  </>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Modal, Button, Form, Col,\n} from 'react-bootstrap';\n\nclass NewPerson extends React.Component {\n  constructor({ people, forID, ...props }) {\n    super({ people, forID, ...props });\n\n    this.state = {\n      people,\n      newPerson: {\n        id: '',\n        name: '',\n        sex: '',\n        died: 0,\n        born: 0,\n        mother: '',\n        father: '',\n        age: 0,\n        century: 0,\n        children: '',\n      },\n      show: false,\n    };\n    console.log(this.state.newPerson);\n    // console.log(this.state.people);\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { handleFormSubmit } = this.props;\n\n    handleFormSubmit(this.state.newPerson);\n    this.setState({ show: false });\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    const { newPerson } = this.state;\n    // const index = this.state.people.length;\n\n    this.setState(state => ({\n      newPerson: {\n        ...newPerson,\n        [name]: name === 'born' || name === 'died' ? Number(value) : value,\n        id: this.props.forID.length + 1,\n        age: newPerson.died - newPerson.born,\n        century: Math.ceil(newPerson.died / 100),\n      },\n      // people: [state.people].concat(newPerson),\n    }));\n\n    console.log(this.state.people);\n    console.log(this.state.newPerson);\n  };\n\n  handleShow = () => this.setState({ show: true });\n\n  handleClose = () => this.setState({ show: false });\n\n  render() {\n    // console.log(this.state.people);\n\n    return (\n      <>\n        <Button\n          variant=\"outline-info text-monospace\"\n          onClick={this.handleShow}\n        >\n          ✚ Add person\n        </Button>\n\n        <form onSubmit={this.handleSubmit}>\n          <Modal\n            show={this.state.show}\n            onHide={this.handleClose}\n            onSubmit={this.handleSubmit}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>✚ Add person</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form>\n                <Form.Group>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    placeholder=\"Enter name\"\n                    onChange={this.handleChange}\n                    name=\"name\"\n                  />\n                </Form.Group>\n\n                <Form.Group>\n                  <label htmlFor=\"male-Radio\">\n                    <input\n                      onChange={this.handleChange}\n                      name=\"sex\"\n                      type=\"radio\"\n                      value=\"m\"\n                      id=\"male-Radio\"\n                    />\n                    <span className=\"male-radio\">♂ Male</span>\n                  </label>\n                  {' / '}\n                  <label htmlFor=\"female-Radio\">\n                    <input\n                      onChange={this.handleChange}\n                      name=\"sex\"\n                      type=\"radio\"\n                      value=\"f\"\n                      id=\"female-Radio\"\n                    />\n                    <span className=\"female-radio\">♀ Female</span>\n                  </label>\n                </Form.Group>\n\n                <Form.Row>\n                  <Form.Group as={Col}>\n                    <Form.Label>Born</Form.Label>\n                    <Form.Control\n                      onChange={this.handleChange}\n                      placeholder=\"Date of birth\"\n                      value={this.state.born}\n                      name=\"born\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col}>\n                    <Form.Label>Died</Form.Label>\n                    <Form.Control\n                      onChange={this.handleChange}\n                      placeholder=\"Date of death\"\n                      name=\"died\"\n                    />\n                  </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                  <Form.Group as={Col}>\n                    <Form.Label>Mother</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      onChange={this.handleChange}\n                      name=\"mother\"\n                    >\n                      <option value=\"none\">choose a mother</option>\n                      {this.state.people.map(person => (\n                        <option value={person.mother} key={person.id}>\n                          {person.mother}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n\n                  <Form.Group as={Col}>\n                    <Form.Label>Father</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      onChange={this.handleChange}\n                      name=\"father\"\n                    >\n                      <option value=\"none\">choose a father</option>\n                      {this.state.people.map(person => (\n                        <option value={person.father} key={person.id}>\n                          {person.father}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </Form.Row>\n              </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"danger\" onClick={this.handleClose}>\n                Close\n              </Button>\n              <Button\n                variant=\"info\"\n                type=\"submit\"\n                onClick={this.handleSubmit}\n              >\n                ✚ Add person\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </form>\n      </>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  people: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    century: PropTypes.number.isRequired,\n    mother: PropTypes.number.isRequired,\n    father: PropTypes.number.isRequired,\n    children: PropTypes.number.isRequired,\n  }).isRequired,\n  forID: PropTypes.objectOf.isRequired,\n  handleFormSubmit: PropTypes.func.isRequired,\n};\nexport default NewPerson;\n","import React from 'react';\nimport Data from '../api/getData';\nimport PeopleTable from './PeopleTable';\nimport NewPerson from './NewPerson';\n\nimport '../style.css';\n\nconst getData = async() => {\n  const people = await Data();\n\n  return people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n      .filter(child => (\n        child.father === person.name || child.mother === person.name\n      ))\n      .map(child => child.name)\n      .join(', '),\n  }));\n};\n\nconst getSortBy = field => (a, b) => {\n  switch (typeof a[field]) {\n    case 'string':\n      return a[field].localeCompare(b[field]);\n\n    case 'number':\n    case 'boolean':\n      return (a[field] - b[field]);\n\n    default:\n      return 0;\n  }\n};\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    forID: [],\n    visiblePeople: [],\n    isLoaded: false,\n    sortField: '',\n  };\n\n  loadData = async() => {\n    const people = await getData();\n\n    this.setState({\n      people,\n      visiblePeople: [...people],\n      forID: [...people],\n      isLoaded: true,\n    });\n  };\n\n  onSortPeopleBy = (field) => {\n    field !== this.state.sortField\n      ? this.setState(prevState => ({\n        visiblePeople: prevState.visiblePeople.sort(getSortBy(field)),\n        sortField: field,\n      }))\n      : this.setState(prevState => ({\n        visiblePeople: prevState.visiblePeople.reverse(),\n      }));\n  };\n\n  onSearchByName = (event) => {\n    const searchField = event.target.value.toLowerCase();\n\n    this.setState(prevState => ({\n      visiblePeople: prevState.people.filter(\n        person => [person.name, person.mother, person.father]\n          .join('')\n          .toLowerCase()\n          .includes(searchField)\n      ),\n    }));\n  };\n\n  handleFormSubmit = (newPerson) => {\n    this.setState(prevState => ({\n      visiblePeople: [...prevState.visiblePeople, newPerson],\n      forID: [...prevState.visiblePeople, newPerson],\n    }));\n  };\n\n  render() {\n    const { forID, visiblePeople, isLoaded } = this.state;\n    const { onSortPeopleBy } = this;\n\n    return (\n      <div className=\"page \">\n        <header className=\"text-monospace\">\n          <h1>\n            {visiblePeople.length}\n            People in TABLE\n          </h1>\n          <h6>\n            ⇵ People sorted by:\n            {this.state.sortField.toUpperCase()}\n          </h6>\n        </header>\n\n        {isLoaded ? (\n          <>\n            <div className=\"filter-box\">\n              <label className=\"filter\" htmlFor=\"search\">\n                <input\n                  className=\"form-control filter-input text-monospace\"\n                  id=\"search\"\n                  type=\"text\"\n                  placeholder=\" start search by name\"\n                  onChange={this.onSearchByName}\n                />\n              </label>\n              <div className=\"add-btn\">\n                <NewPerson\n                  people={visiblePeople}\n                  forID={forID}\n                  handleFormSubmit={this.handleFormSubmit}\n                />\n              </div>\n            </div>\n            <table className=\"PeopleTable table-borderless\">\n              <thead className=\"table-header text-monospace\">\n                <tr>\n                  <th onClick={() => onSortPeopleBy('id')}>ID</th>\n                  <th onClick={() => onSortPeopleBy('name')}>Name</th>\n                  <th onClick={() => onSortPeopleBy('sex')}>Sex</th>\n                  <th onClick={() => onSortPeopleBy('born')}>Born</th>\n                  <th onClick={() => onSortPeopleBy('died')}>Died</th>\n                  <th onClick={() => onSortPeopleBy('age')}>Age</th>\n                  <th onClick={() => onSortPeopleBy('century')}>Century</th>\n                  <th onClick={() => onSortPeopleBy('father')}>Father</th>\n                  <th onClick={() => onSortPeopleBy('mother')}>Mother</th>\n                  <th onClick={() => onSortPeopleBy('children')}>\n                    Children\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"font-weight-light\">\n                <PeopleTable people={visiblePeople} />\n              </tbody>\n            </table>\n          </>\n        ) : (\n          <div className=\"start-btn\">\n            <button\n              className=\"btn btn-info btn-lg text-monospace\"\n              onClick={this.loadData}\n              type=\"button\"\n            >\n              Open TABLE\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}