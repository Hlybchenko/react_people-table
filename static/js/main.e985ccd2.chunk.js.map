{"version":3,"sources":["api/getData.js","components/setClassName.js","components/Person.js","components/PeopleTable.js","components/NewPerson.js","components/App.js","index.js"],"names":["getData","fetch","proxyUrl","then","response","json","addClassForName","person","className","born","died","addClassForPerson","concat","century","sex","age","children","length","Person","_ref","react_default","a","createElement","tabIndex","id","name","father","mother","PeopleTable","people","Fragment","map","components_Person","key","NewPerson","_this","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleName","event","value","target","setState","trim","console","log","state","handleBorn","handleDied","handleSex","handleMother","handleFather","handleShow","bind","assertThisInitialized","handleClose","objectSpread","show","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","onSubmit","handleSubmit","Group","Label","Control","placeholder","onChange","htmlFor","type","required","Row","as","Col","Footer","React","Component","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Data","sent","abrupt","index","Math","ceil","filter","child","join","stop","apply","arguments","getSortBy","field","b","localeCompare","App","visiblePeople","isLoaded","sortField","loadData","_callee2","_context2","toConsumableArray","onReverseTable","prevState","reverse","onSortPeopleBy","sort","onSearchByName","searchField","toLowerCase","includes","_this2","_this$state","components_NewPerson","components_PeopleTable","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e985ccd2.chunk.js","sourcesContent":["const getData = () => {\n  const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n  const targetUrl = (\n    'https://mate-academy.github.io/react_people-table/api/people.json'\n  );\n\n  return fetch(proxyUrl + targetUrl)\n    .then(response => response.json());\n};\n\nexport default getData;\n","export const addClassForName = (person) => {\n  let className = '';\n\n  if (person.born < 1650) {\n    className += 'born-before-1650';\n  }\n\n  if (person.died > 1800) {\n    className += 'died-after-1800 font-weight-bolder';\n  }\n\n  return className;\n};\n\nexport const addClassForPerson = (person) => {\n  let className = `person person--lived-in-${person.century}`;\n\n  if (person.sex === 'm') {\n    className += ' person--male';\n  }\n\n  if (person.sex === 'f') {\n    className += ' person--female';\n  }\n\n  if (person.age > 65) {\n    className += ' over-65';\n  }\n\n  if (person.sex === 'f' && person.children.length > 0) {\n    className += ' person--mother';\n  }\n\n  if (person.sex === 'm' && person.children.length > 0) {\n    className += ' person--father';\n  }\n\n  return className;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addClassForPerson, addClassForName } from './setClassName';\n\nconst Person = ({ person }) => (\n  <tr className={addClassForPerson(person)} tabIndex=\"1\">\n    <td>{person.id}</td>\n    <td className={addClassForName(person)}>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.age}</td>\n    <td>{person.century}</td>\n    <td>{person.father}</td>\n    <td>{person.mother}</td>\n    <td>{person.children}</td>\n  </tr>\n);\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    age: PropTypes.number,\n    century: PropTypes.number,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    children: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Person from './Person';\n\nconst PeopleTable = ({ people }) => (\n  <>\n    {people.map(person => (\n      <Person person={person} key={person.id} />\n    ))}\n  </>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport { Modal, Button, Form, Col } from 'react-bootstrap';\n\nclass NewPerson extends React.Component {\n  constructor({ props, people }) {\n    super({ props, people });\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      people,\n      person: people.map( person => ({\n        ...person,\n      })),\n      show: false,\n    };\n    // console.log(this.state.people);\n  }\n\n\n  handleName = (event) => {\n    const { value } = event.target;\n    this.setState({ name: value.trim() });\n    console.log(value);\n    console.log(this.state.name);\n  };\n\n  handleBorn = (event) => {\n    const { value } = event.target;\n    this.setState({ born: value.trim() });\n    console.log(value);\n    console.log(this.state.born);\n  }\n\n  handleDied = (event) => {\n    const { value } = event.target;\n    this.setState({ died: value.trim() });\n    console.log(value);\n    console.log(this.state.died);\n  }\n\n  handleSex = (event) => {\n    const { value } = event.target;\n    this.setState({ sex: value });\n    console.log(value);\n    console.log(this.state.sex);\n  }\n\n  handleMother = (event) => {\n    const { value } = event.target;\n    this.setState({ mother: value });\n    console.log(value);\n    console.log(this.state.mother);\n  }\n\n  handleFather = (event) => {\n    const { value } = event.target;\n    this.setState({ father: value });\n    console.log(value);\n    console.log(this.state.father);\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  render() {\n    console.log(this.state.people);\n\n    return (\n      <>\n        <Button\n          variant=\"outline-info text-monospace\"\n          onClick={this.handleShow}\n        >\n          ✚ Add person\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>✚ Add person</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group>\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  placeholder=\"Enter name\"\n                  onChange={this.handleName}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <label htmlFor=\"male-Radio\">\n                  <input\n                    onChange={this.handleSex}\n                    name=\"sex\"\n                    type=\"radio\"\n                    value=\"m\"\n                    id=\"male-Radio\"\n                    required\n                  />\n                  ♂ Male\n                </label>\n                {\"/\"}\n                <label htmlFor=\"female-Radio\">\n                  <input\n                    onChange={this.handleSex}\n                    name=\"sex\"\n                    type=\"radio\"\n                    value=\"f\"\n                    id=\"female-Radio\"\n                    required\n                  />\n                  ♀ Female\n                </label>\n              </Form.Group>\n\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label>Born</Form.Label>\n                  <Form.Control\n                    onChange={this.handleBorn}\n                    placeholder=\"Date of birth\"\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Died</Form.Label>\n                  <Form.Control\n                    onChange={this.handleDied}\n                    placeholder=\"Date of death\"\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label>Mother</Form.Label>\n                  <Form.Control as=\"select\" onChange={this.handleMother}>\n                    <option value=\"none\">choose a mother</option>\n                    {this.state.people.map(person => (\n                      <option value={person.mother}>{person.mother}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col}>\n                  <Form.Label>Father</Form.Label>\n                  <Form.Control as=\"select\" onChange={this.handleFather}>\n                    <option value=\"none\">choose a father</option>\n                    {this.state.people.map(person => (\n                      <option value={person.father}>{person.father}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.handleClose}>\n              Close\n            </Button>\n            <Button variant=\"info\" type=\"submit\" onClick={this.handleClose}>\n              ✚ Add person\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default NewPerson;\n","import React from 'react';\nimport Data from '../api/getData';\nimport PeopleTable from './PeopleTable';\nimport NewPerson from './NewPerson';\n\nimport '../style.css';\n\nconst getData = async() => {\n  const people = await Data();\n\n  return people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n      .filter(child => (\n        child.father === person.name || child.mother === person.name\n      ))\n      .map(child => child.name)\n      .join(', '),\n  }));\n};\n\nconst getSortBy = field => (a, b) => {\n  switch (typeof a[field]) {\n    case 'string':\n      return a[field].localeCompare(b[field]);\n\n    case 'number':\n    case 'boolean':\n      return (a[field] - b[field]);\n\n    default:\n      return 0;\n  }\n};\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    visiblePeople: [],\n    isLoaded: false,\n    sortField: '',\n\n  };\n\n  loadData = async() => {\n    const people = await getData();\n\n    this.setState({\n      people,\n      visiblePeople: [...people],\n      isLoaded: true,\n    });\n  };\n\n  onReverseTable = () => {\n    this.setState(prevState => ({\n      visiblePeople: prevState.visiblePeople.reverse(),\n    }));\n  };\n\n  onSortPeopleBy = (field) => {\n    field !== this.state.sortField\n      ? this.setState(prevState => ({\n        visiblePeople: prevState.visiblePeople.sort(getSortBy(field)),\n        sortField: field,\n      }))\n      : this.onReverseTable();\n  }\n\n  onSearchByName = (event) => {\n    const searchField = event.target.value;\n    this.setState(prevState => ({\n      visiblePeople: prevState.people.filter(\n        person => (\n          [person.name, person.mother, person.father]\n            .join('')\n            .toLowerCase()\n            .includes(searchField.toLowerCase())\n        )\n      ),\n    }));\n  };\n\n  render() {\n    const { visiblePeople, isLoaded } = this.state;\n    return (\n      <div className=\"page \">\n        <header className=\"text-monospace\">\n          <h1>{visiblePeople.length} People in TABLE</h1>\n        </header>\n\n        {isLoaded ? (\n          <>\n            <div className=\"filter-box\">\n              <label className=\"filter\" htmlFor=\"search\">\n                <input\n                  className=\"form-control filter-input text-monospace\"\n                  id=\"search\"\n                  type=\"text\"\n                  placeholder=\" start search by name\"\n                  onChange={this.onSearchByName}\n                />\n              </label>\n              <div className=\"add-btn\">\n                <NewPerson people={visiblePeople} />\n              </div>\n            </div>\n            <table\n              className=\"PeopleTable table-borderless\"\n            >\n              <thead className=\"table-header text-monospace\">\n                <tr>\n                  <th onClick={() => this.onSortPeopleBy('id')}>ID</th>\n                  <th onClick={() => this.onSortPeopleBy('name')}>Name</th>\n                  <th onClick={() => this.onSortPeopleBy('sex')}>Sex</th>\n                  <th onClick={() => this.onSortPeopleBy('born')}>Born</th>\n                  <th onClick={() => this.onSortPeopleBy('died')}>Died</th>\n                  <th onClick={() => this.onSortPeopleBy('age')}>Age</th>\n                  <th onClick={() => this.onSortPeopleBy('century')}>\n                    Century\n                  </th>\n                  <th onClick={() => this.onSortPeopleBy('father')}>\n                    Father\n                  </th>\n                  <th onClick={() => this.onSortPeopleBy('mother')}>\n                    Mother\n                  </th>\n                  <th onClick={() => this.onSortPeopleBy('children')}>\n                    Children\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"font-weight-light\" >\n                <PeopleTable people={visiblePeople} />\n              </tbody>\n            </table>\n          </>\n        ) : (\n          <div className=\"start-btn\">\n            <button\n              className=\"btn btn-info btn-lg text-monospace\"\n              onClick={this.loadData}\n              type=\"button\"\n            >\n              Open TABLE\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}